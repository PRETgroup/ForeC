ForeC Compiler (multicore distribution)
Version: 0.985 (28 September 2013)
Debug output
---------------------------------------

Source file name: Pi.forec
Header file name: Pi.foreh

============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	0		t0__thread
	0		t1__thread
	0		t2__thread
	1		t3__thread
	1		t4__thread
	1		t5__thread


==============================
tools::SymbolTable::toString()
==============================
Symbol tables:
--------------
	Scope name: calculatePi
		Scope level: 0
			Instance: 0
				(variable) subSegment__calculatePi_0_0
				(variable) RANGE__calculatePi_0_0
				(variable) SUBRANGE__calculatePi_0_0
				(variable) segment__calculatePi_0_0
				(variable) result__calculatePi_0_0
				(variable) denominator__calculatePi_0_0
				(variable) numerator__calculatePi_0_0
				(variable) startIndex__calculatePi_0_0
				(variable) endIndex__calculatePi_0_0
				(variable) i__calculatePi_0_0

	Scope name: global
		Scope level: 0
			Instance: 0
				(thread) t0__thread
				(thread) t1__thread
				(thread) t2__thread
				(thread) t3__thread
				(thread) t4__thread
				(thread) t5__thread
				(typedef) integer__global_0_0
				(typedef) real__global_0_0
				(variable) INITIAL__global_0_0
				(variable) LIMIT__global_0_0
				(variable) THREADS__global_0_0
				(variable) ITERATIONS__global_0_0
				(shared) RANGE__global_0_0
				(shared) SUBRANGE__global_0_0
				(typedef) AccumReal__global_0_0
				(shared) result__global_0_0
				(shared) segment__global_0_0
				(function) calculatePi

	Scope name: main
		Scope level: 0
			Instance: 0
				(variable) argc__main_0_0
				(variable) argv__main_0_0
				(variable) startTime__main_0_0
				(variable) endTime__main_0_0
				(variable) i__main_0_0
				(variable) seconds__main_0_0
				(variable) microseconds__main_0_0

	Scope name: plus
		Scope level: 0
			Instance: 0
				(variable) copy1__plus_0_0
				(variable) copy2__plus_0_0


Declared shared symbols:
------------------------
	Scope name: global
		(Shared_RANGE__global_0_0) RANGE__global_0_0
		(Shared_SUBRANGE__global_0_0) SUBRANGE__global_0_0
		(Shared_result__global_0_0) result__global_0_0
		(Shared_segment__global_0_0) segment__global_0_0


Use/Def of symbols:
-------------------
	Scope name: calculatePi
		def:
			() integer__global_0_0
			() real__global_0_0
			(variable) result__calculatePi_0_0
			(variable) denominator__calculatePi_0_0
			(variable) numerator__calculatePi_0_0
			(variable) i__calculatePi_0_0

		use:
			(variable) subSegment__calculatePi_0_0
			(variable) RANGE__calculatePi_0_0
			(variable) SUBRANGE__calculatePi_0_0
			(variable) segment__calculatePi_0_0
			(variable) result__calculatePi_0_0
			(variable) denominator__calculatePi_0_0
			(variable) numerator__calculatePi_0_0
			(variable) startIndex__calculatePi_0_0
			(variable) endIndex__calculatePi_0_0
			(variable) i__calculatePi_0_0

	Scope name: main
		def:
			() integer__global_0_0
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(variable) i__main_0_0
			(variable) microseconds__main_0_0

		use:
			(thread) t0__thread
			(thread) t1__thread
			(thread) t2__thread
			(thread) t3__thread
			(thread) t4__thread
			(thread) t5__thread
			() integer__global_0_0
			(variable) INITIAL__global_0_0
			(variable) LIMIT__global_0_0
			(variable) THREADS__global_0_0
			(variable) ITERATIONS__global_0_0
			(shared) RANGE__global_0_0
			(shared) result__global_0_0
			(variable) startTime__main_0_0
			(variable) endTime__main_0_0
			(variable) i__main_0_0
			(variable) seconds__main_0_0
			(variable) microseconds__main_0_0

	Scope name: plus
		def:
			() AccumReal__global_0_0
			(variable) copy1__plus_0_0

		use:
			(variable) copy1__plus_0_0
			(variable) copy2__plus_0_0

	Scope name: t0
		def:
			(shared) result__global_0_0

		use:
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(function) calculatePi

	Scope name: t1
		def:
			(shared) result__global_0_0

		use:
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(function) calculatePi

	Scope name: t2
		def:
			(shared) result__global_0_0

		use:
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(function) calculatePi

	Scope name: t3
		def:
			(shared) result__global_0_0

		use:
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(function) calculatePi

	Scope name: t4
		def:
			(shared) result__global_0_0

		use:
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(function) calculatePi

	Scope name: t5
		def:
			(shared) result__global_0_0

		use:
			(shared) RANGE__global_0_0
			(shared) SUBRANGE__global_0_0
			(shared) segment__global_0_0
			(function) calculatePi


Indirect use/def of symbols by parId:
-------------------------------------
	par0:
		RANGE__global_0_0
			use (root): t0 t1 t2 t3 t4 t5 

		SUBRANGE__global_0_0
			use (root): t0 t1 t2 t3 t4 t5 

		result__global_0_0
			def (root): t0 t1 t2 t3 t4 t5 

		segment__global_0_0
			use (root): t0 t1 t2 t3 t4 t5 


Indirect use/def of symbols by threadId:
----------------------------------------
	main:
		RANGE__global_0_0
			use (root): main 

		SUBRANGE__global_0_0
			use (root): main 

		result__global_0_0
			def (root): main 

		segment__global_0_0
			use (root): main 

	t0:
		RANGE__global_0_0
			use (intermediate): t0 

		SUBRANGE__global_0_0
			use (intermediate): t0 

		result__global_0_0
			def (intermediate): t0 

		segment__global_0_0
			use (intermediate): t0 

	t1:
		RANGE__global_0_0
			use (intermediate): t1 

		SUBRANGE__global_0_0
			use (intermediate): t1 

		result__global_0_0
			def (intermediate): t1 

		segment__global_0_0
			use (intermediate): t1 

	t2:
		RANGE__global_0_0
			use (intermediate): t2 

		SUBRANGE__global_0_0
			use (intermediate): t2 

		result__global_0_0
			def (intermediate): t2 

		segment__global_0_0
			use (intermediate): t2 

	t3:
		RANGE__global_0_0
			use (intermediate): t3 

		SUBRANGE__global_0_0
			use (intermediate): t3 

		result__global_0_0
			def (intermediate): t3 

		segment__global_0_0
			use (intermediate): t3 

	t4:
		RANGE__global_0_0
			use (intermediate): t4 

		SUBRANGE__global_0_0
			use (intermediate): t4 

		result__global_0_0
			def (intermediate): t4 

		segment__global_0_0
			use (intermediate): t4 

	t5:
		RANGE__global_0_0
			use (intermediate): t5 

		SUBRANGE__global_0_0
			use (intermediate): t5 

		result__global_0_0
			def (intermediate): t5 

		segment__global_0_0
			use (intermediate): t5 


Functions used for combining shared variables:
----------------------------------------------
	plus

============================
tools::Threading::toString()
============================
Threads declared:
-----------------
	* main__thread
	* t0__thread
	* t1__thread
	* t2__thread
	* t3__thread
	* t4__thread
	* t5__thread

Threads unused:
---------------

par(...) statements:
--------------------
	Thread scope: main
		par0:
		* t0__thread
		* t1__thread
		* t2__thread
		* t3__thread
		* t4__thread
		* t5__thread

========================
tools::Abort::toString()
========================
============================
tools::Condition::toString()
============================
Iterations statements:
----------------------
	Thread scope: main__thread
		par0:
		* for1_0


========================
tarot::Tarot::toString()
========================
Full tarot:
-----------
	core0: main__thread
	.	core0: for1_0
	.	.	core0: par0
	.	.	|	core0: t0__thread
	.	.	|	core0: t1__thread
	.	.	|	core0: t2__thread
	.	.	|	core1: t3__thread
	.	.	|	core1: t4__thread
	.	.	|	core1: t5__thread


Tarot by coreId:
----------------
	core0:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core0: t0__thread
		.	.	|	core0: t1__thread
		.	.	|	core0: t2__thread

	core1:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t3__thread
		.	.	|	core1: t4__thread
		.	.	|	core1: t5__thread


par(...) statements with core allocation:
-----------------------------------------
	Thread main__thread:
		all:
		* core0
		* core1

		par0:
		* core0
		* core1


par(...) statements with active cores:
--------------------------------------
	Thread main__thread:
		all:
		* core0
		* core1

		par0:
		* core0
		* core1


Reaction starts:
----------------
	core0:
		main: Master

	core1:
		main: Slave


Reaction ends:
--------------
	core0:
		par0:
			coreIds:
			* 0
			* 1

			isMaster:
			* true

			threadScope:
			* main

	core1:
		par0:
			threadScope:
			* main


Par(...) handlers:
------------------
	par0:
	* t0__thread
	* t1__thread
	* t2__thread
	* t3__thread
	* t4__thread
	* t5__thread
	* mainReactionStartMaster0
	* mainReactionStartSlave1
	* mainReactionEndMaster0
	* mainReactionEndSlave1


Linked lists:
-------------
	core0:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartMaster0
			* (thread) t0__thread
			* (thread) t1__thread
			* (thread) t2__thread
			* (parEnd) mainReactionEndMaster0

	core1:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave1
			* (thread) t3__thread
			* (thread) t4__thread
			* (thread) t5__thread
			* (parEnd) mainReactionEndSlave1


par(...) handlers in thread scopes:
-----------------------------------
	par0	main__thread

Scoped iterations:
------------------
	for1_0:
		coreIds:
		* 0
		* 1

		parIds:
		* par0


============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	0		t0__thread
	0		t1__thread
	0		t2__thread
	1		t3__thread
	1		t4__thread
	1		t5__thread


========================
tools::Mutex::toString()
========================
Mutex information:
------------------

