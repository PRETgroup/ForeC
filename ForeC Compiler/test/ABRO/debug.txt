ForeC Compiler (multicore distribution)
Version: 0.99 (5 October 2014)
Debug output
---------------------------------------

Debug level: 0
Check instantaneous loops: false
Minimum reaction time: 0 clock cycles
Source file name: abro.forec
Header file name: abro.foreh

============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	0		tA__thread
	0		tABRO__thread
	0		tB__thread
	0		tDebug__thread
	0		tSetInputs__thread


==============================
tools::SymbolTable::toString()
==============================
Symbol tables:
--------------
	Scope name: global
		Scope level: 0
			Instance: 0
				(shared) A__global_0_0
				(shared) B__global_0_0
				(shared) R__global_0_0
				(shared) O__global_0_0
				(thread) tSetInputs__thread
				(thread) tA__thread
				(thread) tB__thread
				(thread) tABRO__thread
				(thread) tDebug__thread
				(sharedConst) MAX_TICK_NUMBER__global_0_0

	Scope name: main
		Scope level: 0
			Instance: 0
				(variable) argc__main_0_0
				(variable) argv__main_0_0

	Scope name: tA
		Scope level: 0
			Instance: 0
				(variable) initAwait__tA_0_0

	Scope name: tABRO
		Scope level: 0

		Scope level: 1
			Instance: 0
				(variable) i__tABRO_1_0

	Scope name: tB
		Scope level: 0
			Instance: 0
				(variable) initAwait__tB_0_0

	Scope name: tDebug
		Scope level: 0

		Scope level: 1
			Instance: 0
				(variable) i__tDebug_1_0


Declared shared symbols:
------------------------
	Scope name: global
		(Shared_A__global_0_0) A__global_0_0
		(Shared_B__global_0_0) B__global_0_0
		(Shared_R__global_0_0) R__global_0_0
		(Shared_O__global_0_0) O__global_0_0

	Scope name: global
		(/* shared */ const int) MAX_TICK_NUMBER__global_0_0


Use/Def of symbols:
-------------------
	Scope name: main
		use:
			(thread) tSetInputs__thread
			(thread) tABRO__thread
			(thread) tDebug__thread

	Scope name: tA
		def:
			(variable) initAwait__tA_0_0

		use:
			(shared) A__global_0_0
			(variable) initAwait__tA_0_0

	Scope name: tABRO
		def:
			(shared) O__global_0_0

		use:
			(shared) R__global_0_0
			(thread) tA__thread
			(thread) tB__thread
			(sharedConst) MAX_TICK_NUMBER__global_0_0
			(variable) i__tABRO_1_0

	Scope name: tB
		def:
			(variable) initAwait__tB_0_0

		use:
			(shared) B__global_0_0
			(variable) initAwait__tB_0_0

	Scope name: tDebug
		use:
			(shared) A__global_0_0
			(shared) B__global_0_0
			(shared) R__global_0_0
			(shared) O__global_0_0
			(sharedConst) MAX_TICK_NUMBER__global_0_0
			(variable) i__tDebug_1_0

	Scope name: tSetInputs
		def:
			(shared) A__global_0_0
			(shared) B__global_0_0
			(shared) R__global_0_0


Indirect use/def of symbols by parId:
-------------------------------------
	par0:
		A__global_0_0
			def (root): tSetInputs 
			use (root): tABRO tDebug 

		B__global_0_0
			def (root): tSetInputs 
			use (root): tABRO tDebug 

		R__global_0_0
			def (root): tSetInputs 
			use (root): tABRO tDebug 

		O__global_0_0
			def (root): tABRO 
			use (root): tDebug 

		i__tABRO_1_0
			use (skip): tABRO 

		initAwait__tA_0_0
			def (skip): tABRO 
			use (skip): tABRO 

		initAwait__tB_0_0
			def (skip): tABRO 
			use (skip): tABRO 

		i__tDebug_1_0
			use (skip): tDebug 

	par1:
		A__global_0_0
			use (intermediate): tA 

		B__global_0_0
			use (intermediate): tB 

		initAwait__tA_0_0
			def (skip): tA 
			use (skip): tA 

		initAwait__tB_0_0
			def (skip): tB 
			use (skip): tB 


Indirect use/def of symbols by threadId:
----------------------------------------
	main:
		A__global_0_0
			def (root): main 
			use (root): main 

		B__global_0_0
			def (root): main 
			use (root): main 

		R__global_0_0
			def (root): main 
			use (root): main 

		O__global_0_0
			def (root): main 
			use (root): main 

		i__tABRO_1_0
			use (skip): main 

		initAwait__tA_0_0
			def (skip): main 
			use (skip): main 

		initAwait__tB_0_0
			def (skip): main 
			use (skip): main 

		i__tDebug_1_0
			use (skip): main 

	tA:
		A__global_0_0
			use (intermediate): tA 

		initAwait__tA_0_0
			def (skip): tA 
			use (skip): tA 

	tABRO:
		A__global_0_0
			use (intermediate): tABRO 

		B__global_0_0
			use (intermediate): tABRO 

		R__global_0_0
			use (intermediate): tABRO 

		O__global_0_0
			def (intermediate): tABRO 

		i__tABRO_1_0
			use (skip): tABRO 

		initAwait__tA_0_0
			def (skip): tABRO 
			use (skip): tABRO 

		initAwait__tB_0_0
			def (skip): tABRO 
			use (skip): tABRO 

	tB:
		B__global_0_0
			use (intermediate): tB 

		initAwait__tB_0_0
			def (skip): tB 
			use (skip): tB 

	tDebug:
		A__global_0_0
			use (intermediate): tDebug 

		B__global_0_0
			use (intermediate): tDebug 

		R__global_0_0
			use (intermediate): tDebug 

		O__global_0_0
			use (intermediate): tDebug 

		i__tDebug_1_0
			use (skip): tDebug 

	tSetInputs:
		A__global_0_0
			def (intermediate): tSetInputs 

		B__global_0_0
			def (intermediate): tSetInputs 

		R__global_0_0
			def (intermediate): tSetInputs 


Functions used for combining shared variables:
----------------------------------------------

============================
tools::Threading::toString()
============================
Threads declared:
-----------------
	* main__thread
	* tA__thread
	* tABRO__thread
	* tB__thread
	* tDebug__thread
	* tSetInputs__thread

Threads unused:
---------------

par(...) statements:
--------------------
	Thread scope: main
		par0:
		* tSetInputs__thread
		* tDebug__thread
		* tABRO__thread

	Thread scope: tABRO
		par1:
		* tA__thread
		* tB__thread

========================
tools::Abort::toString()
========================
Abort statements:
-----------------
	Thread scope: tABRO__thread
		par1:
		* abortStrongNonImmediate0 strongNonImmediate


============================
tools::Condition::toString()
============================
Iterations statements:
----------------------
	Thread scope: tABRO__thread
		par1:
		* for3_1


========================
tarot::Tarot::toString()
========================
Full tarot:
-----------
	core0: main__thread
	.	core0: par0
	.	|	core0: tSetInputs__thread
	.	|	.	pause0
	.	|	.	pause1
	.	|	.	pause2
	.	|	.	pause3
	.	|	.	pause4
	.	|	.	pause5
	.	|	.	pause6
	.	|	.	pause7
	.	|	.	pause8
	.	|	.	pause9
	.	|	core0: tDebug__thread
	.	|	.	core0: for3_4
	.	|	.	.	pause13
	.	|	core0: tABRO__thread
	.	|	.	core0: for3_1
	.	|	.	.	core0: abortStrongNonImmediate0
	.	|	.	.	:	core0: par1
	.	|	.	.	:	|	core0: tA__thread
	.	|	.	.	:	|	.	core0: while_2
	.	|	.	.	:	|	.	.	pause11
	.	|	.	.	:	|	core0: tB__thread
	.	|	.	.	:	|	.	core0: while_3
	.	|	.	.	:	|	.	.	pause12
	.	|	.	.	:	core0: while_0
	.	|	.	.	:	.	pause10


Tarot by coreId:
----------------
	core0:
	-------
		core0: main__thread
		.	core0: par0
		.	|	core0: tSetInputs__thread
		.	|	.	pause0
		.	|	.	pause1
		.	|	.	pause2
		.	|	.	pause3
		.	|	.	pause4
		.	|	.	pause5
		.	|	.	pause6
		.	|	.	pause7
		.	|	.	pause8
		.	|	.	pause9
		.	|	core0: tDebug__thread
		.	|	.	core0: for3_4
		.	|	.	.	pause13
		.	|	core0: tABRO__thread
		.	|	.	core0: for3_1
		.	|	.	.	core0: abortStrongNonImmediate0
		.	|	.	.	:	core0: par1
		.	|	.	.	:	|	core0: tA__thread
		.	|	.	.	:	|	.	core0: while_2
		.	|	.	.	:	|	.	.	pause11
		.	|	.	.	:	|	core0: tB__thread
		.	|	.	.	:	|	.	core0: while_3
		.	|	.	.	:	|	.	.	pause12
		.	|	.	.	:	core0: while_0
		.	|	.	.	:	.	pause10


par(...) statements with core allocation:
-----------------------------------------
	Thread main__thread:
		all:
		* core0

		par0:
		* core0

	Thread tABRO__thread:
		all:
		* core0

		par1:
		* core0


par(...) statements with active cores:
--------------------------------------
	Thread main__thread:
		all:
		* core0

		par0:
		* core0

	Thread tABRO__thread:
		all:
		* core0

		par1:
		* core0


Reaction starts:
----------------
	core0:
		main: Master
		tABRO: Master


Reaction ends:
--------------
	core0:
		par0:
			coreIds:
			* 0

			isMaster:
			* true

			threadScope:
			* main

		par1:
			coreIds:
			* 0

			isMaster:
			* true

			threadScope:
			* tABRO


Par(...) handlers:
------------------
	par0:
	* tABRO__thread
	* tDebug__thread
	* tSetInputs__thread
	* mainReactionStartMaster0
	* mainReactionEndMaster0
	* tABROParHandlerMaster0

	par1:
	* tA__thread
	* tB__thread
	* tABROReactionStartMaster0
	* tABROReactionEndMaster0
	* abortStrongNonImmediate0Check0


Abort checks:
-------------
	core0:
		tABRO:
			strong:
			* abortStrongNonImmediate0(R__global_0_0.value == 1 && init__abortStrongNonImmediate0 == 1)


Linked lists:
-------------
	core0:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartMaster0
			* (thread) tSetInputs__thread
			* (thread) tDebug__thread
			* (thread) tABRO__thread
			* (parHandler) tABROParHandlerMaster0
			* (parEnd) mainReactionEndMaster0

		Thread tABRO__thread linked lists:
			par1:
			* (parStart) tABROReactionStartMaster0
			* (abortStrong) abortStrongNonImmediate0Check0
			* (thread) tA__thread
			* (thread) tB__thread
			* (parEnd) tABROReactionEndMaster0


par(...) handlers in thread scopes:
-----------------------------------
	par0	main__thread
	par1	tABRO__thread

Last par(...)s in each thread's reaction:
-----------------------------------------
	core0:
		Thread scope: tABRO
		* par1


Last par(...)s in each abort:
-------------------------------
	core0:
		Thread scope: tABRO
		* abortStrongNonImmediate0->par1


Last par(...)s in each iteration:
---------------------------------
	core0:
		Thread scope: tABRO
		* for3_1->par1


Last par(...) in each thread:
------------------------------
	core0:
		Thread scope: tABRO
		* par1


Scoped aborts:
--------------
	abortStrongNonImmediate0:
		coreIds:
		* 0

		parIds:
		* par1


Scoped iterations:
------------------
	for3_1:
		coreIds:
		* 0

		parIds:
		* par1


Aborts around par(...):
-----------------------
	par1:
	* abortStrongNonImmediate0 (par1)


============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	0		tA__thread
	0		tABRO__thread
	0		tB__thread
	0		tDebug__thread
	0		tSetInputs__thread

Priority of cores for each par(...) in threads:
-----------------------------------------------
	tABRO:
	* core0(0)



========================
tools::Mutex::toString()
========================
Mutex information:
------------------
	Thread tABRO:
		baseMask  :10000000000000000000000000000000
		coreCount :1
		offset    :31


