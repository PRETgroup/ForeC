ForeC Compiler (multicore distribution)
Version: 0.991 (2 February 2020)
Debug output
---------------------------------------

Debug level: 0
Check instantaneous loops: no
Minimum reaction time: 0 clock cycles
Source file name: NestedPar.forec
Header file name: NestedPar.foreh
Embed main function: no)

============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	1		t0__thread
	2		t1__thread
	3		t2__thread
	4		t3__thread
	5		t4__thread
	6		t5__thread


==============================
tools::SymbolTable::toString()
==============================
Symbol tables:
--------------
	Scope name: global
		Scope level: 0
			Instance: 0
				(thread) t0__thread
				(thread) t1__thread
				(thread) t2__thread
				(thread) t3__thread
				(thread) t4__thread
				(thread) t5__thread
				(variable) counter__global_0_0

	Scope name: main
		Scope level: 0
			Instance: 0
				(variable) argc__main_0_0
				(variable) argv__main_0_0
				(variable) i__main_0_0


Declared shared symbols:
------------------------

Use/Def of symbols:
-------------------
	Scope name: main
		def:
			(variable) i__main_0_0

		use:
			(thread) t0__thread
			(variable) i__main_0_0

	Scope name: t0
		use:
			(thread) t1__thread

	Scope name: t1
		use:
			(thread) t2__thread

	Scope name: t2
		use:
			(thread) t3__thread

	Scope name: t3
		use:
			(thread) t4__thread

	Scope name: t4
		use:
			(thread) t5__thread


Indirect use/def of symbols by parId:
-------------------------------------
	par0:
	par1:
	par2:
	par3:
	par4:
	par5:

Indirect use/def of symbols by threadId:
----------------------------------------
	main:

Functions used for combining shared variables:
----------------------------------------------

============================
tools::Threading::toString()
============================
Threads declared:
-----------------
	* main__thread
	* t0__thread
	* t1__thread
	* t2__thread
	* t3__thread
	* t4__thread
	* t5__thread

Threads unused:
---------------

par(...) statements:
--------------------
	Thread scope: main
		par0:
		* t0__thread

	Thread scope: t0
		par1:
		* t1__thread

	Thread scope: t1
		par2:
		* t2__thread

	Thread scope: t2
		par3:
		* t3__thread

	Thread scope: t3
		par4:
		* t4__thread

	Thread scope: t4
		par5:
		* t5__thread

========================
tools::Abort::toString()
========================
============================
tools::Condition::toString()
============================
Iterations statements:
----------------------
	Thread scope: main__thread
		par0:
		* for1_0


========================
tarot::Tarot::toString()
========================
Full tarot:
-----------
	core0: main__thread
	.	core0: for1_0
	.	.	core0: par0
	.	.	|	core1: t0__thread
	.	.	|	.	pause1
	.	.	|	.	core1: par1
	.	.	|	.	|	core2: t1__thread
	.	.	|	.	|	.	core2: par2
	.	.	|	.	|	.	|	core3: t2__thread
	.	.	|	.	|	.	|	.	core3: par3
	.	.	|	.	|	.	|	.	|	core4: t3__thread
	.	.	|	.	|	.	|	.	|	.	core4: par4
	.	.	|	.	|	.	|	.	|	.	|	core5: t4__thread
	.	.	|	.	|	.	|	.	|	.	|	.	core5: par5
	.	.	|	.	|	.	|	.	|	.	|	.	|	core6: t5__thread
	.	.	|	.	|	.	|	.	|	.	|	.	|	.	pause3
	.	.	|	.	|	.	|	.	|	.	pause2
	.	.	pause0


Tarot by coreId:
----------------
	core0:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	pause0

	core1:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t0__thread
		.	.	|	.	pause1
		.	.	|	.	core1: par1
		.	.	pause0

	core2:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t0__thread
		.	.	|	.	pause1
		.	.	|	.	core1: par1
		.	.	|	.	|	core2: t1__thread
		.	.	|	.	|	.	core2: par2
		.	.	pause0

	core3:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t0__thread
		.	.	|	.	pause1
		.	.	|	.	core1: par1
		.	.	|	.	|	core2: t1__thread
		.	.	|	.	|	.	core2: par2
		.	.	|	.	|	.	|	core3: t2__thread
		.	.	|	.	|	.	|	.	core3: par3
		.	.	pause0

	core4:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t0__thread
		.	.	|	.	pause1
		.	.	|	.	core1: par1
		.	.	|	.	|	core2: t1__thread
		.	.	|	.	|	.	core2: par2
		.	.	|	.	|	.	|	core3: t2__thread
		.	.	|	.	|	.	|	.	core3: par3
		.	.	|	.	|	.	|	.	|	core4: t3__thread
		.	.	|	.	|	.	|	.	|	.	core4: par4
		.	.	|	.	|	.	|	.	|	.	pause2
		.	.	pause0

	core5:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t0__thread
		.	.	|	.	pause1
		.	.	|	.	core1: par1
		.	.	|	.	|	core2: t1__thread
		.	.	|	.	|	.	core2: par2
		.	.	|	.	|	.	|	core3: t2__thread
		.	.	|	.	|	.	|	.	core3: par3
		.	.	|	.	|	.	|	.	|	core4: t3__thread
		.	.	|	.	|	.	|	.	|	.	core4: par4
		.	.	|	.	|	.	|	.	|	.	|	core5: t4__thread
		.	.	|	.	|	.	|	.	|	.	|	.	core5: par5
		.	.	|	.	|	.	|	.	|	.	pause2
		.	.	pause0

	core6:
	-------
		core0: main__thread
		.	core0: for1_0
		.	.	core0: par0
		.	.	|	core1: t0__thread
		.	.	|	.	pause1
		.	.	|	.	core1: par1
		.	.	|	.	|	core2: t1__thread
		.	.	|	.	|	.	core2: par2
		.	.	|	.	|	.	|	core3: t2__thread
		.	.	|	.	|	.	|	.	core3: par3
		.	.	|	.	|	.	|	.	|	core4: t3__thread
		.	.	|	.	|	.	|	.	|	.	core4: par4
		.	.	|	.	|	.	|	.	|	.	|	core5: t4__thread
		.	.	|	.	|	.	|	.	|	.	|	.	core5: par5
		.	.	|	.	|	.	|	.	|	.	|	.	|	core6: t5__thread
		.	.	|	.	|	.	|	.	|	.	|	.	|	.	pause3
		.	.	|	.	|	.	|	.	|	.	pause2
		.	.	pause0


par(...) statements with core allocation:
-----------------------------------------
	Thread main__thread:
		all:
		* core0
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

		par0:
		* core0
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

	Thread t0__thread:
		all:
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

		par1:
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

	Thread t1__thread:
		all:
		* core2
		* core3
		* core4
		* core5
		* core6

		par2:
		* core2
		* core3
		* core4
		* core5
		* core6

	Thread t2__thread:
		all:
		* core3
		* core4
		* core5
		* core6

		par3:
		* core3
		* core4
		* core5
		* core6

	Thread t3__thread:
		all:
		* core4
		* core5
		* core6

		par4:
		* core4
		* core5
		* core6

	Thread t4__thread:
		all:
		* core5
		* core6

		par5:
		* core5
		* core6


par(...) statements with active cores:
--------------------------------------
	Thread main__thread:
		all:
		* core0
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

		par0:
		* core0
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

	Thread t0__thread:
		all:
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

		par1:
		* core1
		* core2
		* core3
		* core4
		* core5
		* core6

	Thread t1__thread:
		all:
		* core2
		* core3
		* core4
		* core5
		* core6

		par2:
		* core2
		* core3
		* core4
		* core5
		* core6

	Thread t2__thread:
		all:
		* core3
		* core4
		* core5
		* core6

		par3:
		* core3
		* core4
		* core5
		* core6

	Thread t3__thread:
		all:
		* core4
		* core5
		* core6

		par4:
		* core4
		* core5
		* core6

	Thread t4__thread:
		all:
		* core5
		* core6

		par5:
		* core5
		* core6


Reaction starts:
----------------
	core0:
		main: Master

	core1:
		main: Slave
		t0: Master

	core2:
		main: Slave
		t0: Slave
		t1: Master

	core3:
		main: Slave
		t0: Slave
		t1: Slave
		t2: Master

	core4:
		main: Slave
		t0: Slave
		t1: Slave
		t2: Slave
		t3: Master

	core5:
		main: Slave
		t0: Slave
		t1: Slave
		t2: Slave
		t3: Slave
		t4: Master

	core6:
		main: Slave
		t0: Slave
		t1: Slave
		t2: Slave
		t3: Slave
		t4: Slave


Reaction ends:
--------------
	core0:
		par0:
			coreIds:
			* 0
			* 1
			* 2
			* 3
			* 4
			* 5
			* 6

			isMaster:
			* true

			threadScope:
			* main

	core1:
		par0:
			threadScope:
			* main

		par1:
			coreIds:
			* 1
			* 2
			* 3
			* 4
			* 5
			* 6

			isMaster:
			* true

			threadScope:
			* t0

	core2:
		par0:
			threadScope:
			* main

		par1:
			threadScope:
			* t0

		par2:
			coreIds:
			* 2
			* 3
			* 4
			* 5
			* 6

			isMaster:
			* true

			threadScope:
			* t1

	core3:
		par0:
			threadScope:
			* main

		par1:
			threadScope:
			* t0

		par2:
			threadScope:
			* t1

		par3:
			coreIds:
			* 3
			* 4
			* 5
			* 6

			isMaster:
			* true

			threadScope:
			* t2

	core4:
		par0:
			threadScope:
			* main

		par1:
			threadScope:
			* t0

		par2:
			threadScope:
			* t1

		par3:
			threadScope:
			* t2

		par4:
			coreIds:
			* 4
			* 5
			* 6

			isMaster:
			* true

			threadScope:
			* t3

	core5:
		par0:
			threadScope:
			* main

		par1:
			threadScope:
			* t0

		par2:
			threadScope:
			* t1

		par3:
			threadScope:
			* t2

		par4:
			threadScope:
			* t3

		par5:
			coreIds:
			* 5
			* 6

			isMaster:
			* true

			threadScope:
			* t4

	core6:
		par0:
			threadScope:
			* main

		par1:
			threadScope:
			* t0

		par2:
			threadScope:
			* t1

		par3:
			threadScope:
			* t2

		par4:
			threadScope:
			* t3

		par5:
			threadScope:
			* t4


Par(...) handlers:
------------------
	par0:
	* t0__thread
	* mainReactionStartMaster0
	* mainReactionStartSlave1
	* mainReactionStartSlave2
	* mainReactionStartSlave3
	* mainReactionStartSlave4
	* mainReactionStartSlave5
	* mainReactionStartSlave6
	* mainReactionEndMaster0
	* mainReactionEndSlave1
	* mainReactionEndSlave2
	* mainReactionEndSlave3
	* mainReactionEndSlave4
	* mainReactionEndSlave5
	* mainReactionEndSlave6
	* t0ParHandlerMaster1
	* t0ParHandlerSlave2
	* t0ParHandlerSlave3
	* t0ParHandlerSlave4
	* t0ParHandlerSlave5
	* t0ParHandlerSlave6

	par1:
	* t1__thread
	* t0ReactionStartMaster1
	* t0ReactionStartSlave2
	* t0ReactionStartSlave3
	* t0ReactionStartSlave4
	* t0ReactionStartSlave5
	* t0ReactionStartSlave6
	* t0ReactionEndMaster1
	* t0ReactionEndSlave2
	* t0ReactionEndSlave3
	* t0ReactionEndSlave4
	* t0ReactionEndSlave5
	* t0ReactionEndSlave6
	* t1ParHandlerMaster2
	* t1ParHandlerSlave3
	* t1ParHandlerSlave4
	* t1ParHandlerSlave5
	* t1ParHandlerSlave6

	par2:
	* t2__thread
	* t1ReactionStartMaster2
	* t1ReactionStartSlave3
	* t1ReactionStartSlave4
	* t1ReactionStartSlave5
	* t1ReactionStartSlave6
	* t1ReactionEndMaster2
	* t1ReactionEndSlave3
	* t1ReactionEndSlave4
	* t1ReactionEndSlave5
	* t1ReactionEndSlave6
	* t2ParHandlerMaster3
	* t2ParHandlerSlave4
	* t2ParHandlerSlave5
	* t2ParHandlerSlave6

	par3:
	* t3__thread
	* t2ReactionStartMaster3
	* t2ReactionStartSlave4
	* t2ReactionStartSlave5
	* t2ReactionStartSlave6
	* t2ReactionEndMaster3
	* t2ReactionEndSlave4
	* t2ReactionEndSlave5
	* t2ReactionEndSlave6
	* t3ParHandlerMaster4
	* t3ParHandlerSlave5
	* t3ParHandlerSlave6

	par4:
	* t4__thread
	* t3ReactionStartMaster4
	* t3ReactionStartSlave5
	* t3ReactionStartSlave6
	* t3ReactionEndMaster4
	* t3ReactionEndSlave5
	* t3ReactionEndSlave6
	* t4ParHandlerMaster5
	* t4ParHandlerSlave6

	par5:
	* t5__thread
	* t4ReactionStartMaster5
	* t4ReactionStartSlave6
	* t4ReactionEndMaster5
	* t4ReactionEndSlave6


Linked lists:
-------------
	core0:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartMaster0
			* (parEnd) mainReactionEndMaster0

	core1:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave1
			* (thread) t0__thread
			* (parHandler) t0ParHandlerMaster1
			* (parEnd) mainReactionEndSlave1

		Thread t0__thread linked lists:
			par1:
			* (parStart) t0ReactionStartMaster1
			* (parEnd) t0ReactionEndMaster1

	core2:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave2
			* (parHandler) t0ParHandlerSlave2
			* (parEnd) mainReactionEndSlave2

		Thread t0__thread linked lists:
			par1:
			* (parStart) t0ReactionStartSlave2
			* (thread) t1__thread
			* (parHandler) t1ParHandlerMaster2
			* (parEnd) t0ReactionEndSlave2

		Thread t1__thread linked lists:
			par2:
			* (parStart) t1ReactionStartMaster2
			* (parEnd) t1ReactionEndMaster2

	core3:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave3
			* (parHandler) t0ParHandlerSlave3
			* (parEnd) mainReactionEndSlave3

		Thread t0__thread linked lists:
			par1:
			* (parStart) t0ReactionStartSlave3
			* (parHandler) t1ParHandlerSlave3
			* (parEnd) t0ReactionEndSlave3

		Thread t1__thread linked lists:
			par2:
			* (parStart) t1ReactionStartSlave3
			* (thread) t2__thread
			* (parHandler) t2ParHandlerMaster3
			* (parEnd) t1ReactionEndSlave3

		Thread t2__thread linked lists:
			par3:
			* (parStart) t2ReactionStartMaster3
			* (parEnd) t2ReactionEndMaster3

	core4:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave4
			* (parHandler) t0ParHandlerSlave4
			* (parEnd) mainReactionEndSlave4

		Thread t0__thread linked lists:
			par1:
			* (parStart) t0ReactionStartSlave4
			* (parHandler) t1ParHandlerSlave4
			* (parEnd) t0ReactionEndSlave4

		Thread t1__thread linked lists:
			par2:
			* (parStart) t1ReactionStartSlave4
			* (parHandler) t2ParHandlerSlave4
			* (parEnd) t1ReactionEndSlave4

		Thread t2__thread linked lists:
			par3:
			* (parStart) t2ReactionStartSlave4
			* (thread) t3__thread
			* (parHandler) t3ParHandlerMaster4
			* (parEnd) t2ReactionEndSlave4

		Thread t3__thread linked lists:
			par4:
			* (parStart) t3ReactionStartMaster4
			* (parEnd) t3ReactionEndMaster4

	core5:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave5
			* (parHandler) t0ParHandlerSlave5
			* (parEnd) mainReactionEndSlave5

		Thread t0__thread linked lists:
			par1:
			* (parStart) t0ReactionStartSlave5
			* (parHandler) t1ParHandlerSlave5
			* (parEnd) t0ReactionEndSlave5

		Thread t1__thread linked lists:
			par2:
			* (parStart) t1ReactionStartSlave5
			* (parHandler) t2ParHandlerSlave5
			* (parEnd) t1ReactionEndSlave5

		Thread t2__thread linked lists:
			par3:
			* (parStart) t2ReactionStartSlave5
			* (parHandler) t3ParHandlerSlave5
			* (parEnd) t2ReactionEndSlave5

		Thread t3__thread linked lists:
			par4:
			* (parStart) t3ReactionStartSlave5
			* (thread) t4__thread
			* (parHandler) t4ParHandlerMaster5
			* (parEnd) t3ReactionEndSlave5

		Thread t4__thread linked lists:
			par5:
			* (parStart) t4ReactionStartMaster5
			* (parEnd) t4ReactionEndMaster5

	core6:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave6
			* (parHandler) t0ParHandlerSlave6
			* (parEnd) mainReactionEndSlave6

		Thread t0__thread linked lists:
			par1:
			* (parStart) t0ReactionStartSlave6
			* (parHandler) t1ParHandlerSlave6
			* (parEnd) t0ReactionEndSlave6

		Thread t1__thread linked lists:
			par2:
			* (parStart) t1ReactionStartSlave6
			* (parHandler) t2ParHandlerSlave6
			* (parEnd) t1ReactionEndSlave6

		Thread t2__thread linked lists:
			par3:
			* (parStart) t2ReactionStartSlave6
			* (parHandler) t3ParHandlerSlave6
			* (parEnd) t2ReactionEndSlave6

		Thread t3__thread linked lists:
			par4:
			* (parStart) t3ReactionStartSlave6
			* (parHandler) t4ParHandlerSlave6
			* (parEnd) t3ReactionEndSlave6

		Thread t4__thread linked lists:
			par5:
			* (parStart) t4ReactionStartSlave6
			* (thread) t5__thread
			* (parEnd) t4ReactionEndSlave6


par(...) handlers in thread scopes:
-----------------------------------
	par0	main__thread
	par1	t0__thread
	par2	t1__thread
	par3	t2__thread
	par4	t3__thread
	par5	t4__thread

Last par(...)s in each thread's reaction:
-----------------------------------------
	core1:
		Thread scope: t0
		* par1

	core2:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

	core3:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

	core4:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

		Thread scope: t3
		* par4

	core5:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

		Thread scope: t3
		* par4

		Thread scope: t4
		* par5

	core6:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

		Thread scope: t3
		* par4

		Thread scope: t4
		* par5


Last par(...) in each thread:
------------------------------
	core1:
		Thread scope: t0
		* par1

	core2:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

	core3:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

	core4:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

		Thread scope: t3
		* par4

	core5:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

		Thread scope: t3
		* par4

		Thread scope: t4
		* par5

	core6:
		Thread scope: t0
		* par1

		Thread scope: t1
		* par2

		Thread scope: t2
		* par3

		Thread scope: t3
		* par4

		Thread scope: t4
		* par5


Scoped iterations:
------------------
	for1_0:
		coreIds:
		* 0
		* 1
		* 2
		* 3
		* 4
		* 5
		* 6

		parIds:
		* par0
		* par1
		* par2
		* par3
		* par4
		* par5


============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	1		t0__thread
	2		t1__thread
	3		t2__thread
	4		t3__thread
	5		t4__thread
	6		t5__thread

Priority of cores for each par(...) in threads:
-----------------------------------------------
	t0:
	* core1(0)
	* core2(1)
	* core3(2)
	* core4(3)
	* core5(4)
	* core6(5)

	t1:
	* core2(0)
	* core3(1)
	* core4(2)
	* core5(3)
	* core6(4)

	t2:
	* core3(0)
	* core4(1)
	* core5(2)
	* core6(3)

	t3:
	* core4(0)
	* core5(1)
	* core6(2)

	t4:
	* core5(0)
	* core6(1)



========================
tools::Mutex::toString()
========================
Mutex information:
------------------
	Thread t0:
		baseMask  :10000000000000000000000000000000
		coreCount :6
		offset    :31

	Thread t1:
		baseMask  :01000000000000000000000000000000
		coreCount :5
		offset    :30

	Thread t2:
		baseMask  :00100000000000000000000000000000
		coreCount :4
		offset    :29

	Thread t3:
		baseMask  :00010000000000000000000000000000
		coreCount :3
		offset    :28

	Thread t4:
		baseMask  :00001000000000000000000000000000
		coreCount :2
		offset    :27


