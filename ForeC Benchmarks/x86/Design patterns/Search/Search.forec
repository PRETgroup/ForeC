#include <stdio.h>

typedef struct {
	char key;
	int value;
} Map;

Map data[10] = {
					{.key = 's', .value = 8},
					{.key = 'e', .value = 4},
					{.key = 'f', .value = 5},
					{.key = 'g', .value = 6},
					{.key = 'a', .value = 3},
		
					{.key = 'o', .value = 9},
					{.key = 'l', .value = 0},
					{.key = 'k', .value = 3},
					{.key = 'l', .value = 4},
					{.key = 'p', .value = 1}
			   };
shared Map (*data_ptr)[10] = &data;
shared int value = 3;
shared int found = -1 combine with left;
int left(int *lhs, int *rhs);

thread t0(void);
thread t1(void);

int main(int argc, char **argv) {
	printf("Searching for value %d\n", value);
	
	abort {
		par(t0, t1);
	} when immediate (found != -1);
	
	printf("Found (%c, %d)\n", data[found].key, data[found].value);
	return 0;
}


thread t0(void) {
	for (int i = 0; i < 5; ++i) {
		if ((*data_ptr)[i].value == value) {
			found = i;
		}
		pause;
	}
}

thread t1(void) {
	for (int i = 5; i < 10; ++i) {
		if ((*data_ptr)[i].value == value) {
			found = i;
		}
		pause;
	}
}

int left(int *lhs, int *rhs) {
	return *lhs;
}
