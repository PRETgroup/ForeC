ForeC Compiler (multicore distribution)
Version: 0.99 (5 October 2014)
Debug output
---------------------------------------

Debug level: 0
Check instantaneous loops: false
Minimum reaction time: 0 clock cycles
Source file name: FlyByWire.forec
Header file name: FlyByWire.1.foreh

============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		failsafe__thread
	0		flight__thread
	0		main__thread
	0		servo__thread
	0		servo0__thread
	0		servo1__thread
	0		servo2__thread
	0		servo3__thread
	0		timer__thread


==============================
tools::SymbolTable::toString()
==============================
Symbol tables:
--------------
	Scope name: autopilot
		Scope level: 0
			Instance: 0
				(variable) mode__autopilot_0_0
				(variable) communicationInput__autopilot_0_0

	Scope name: computation
		Scope level: 0
			Instance: 0
				(variable) result__computation_0_0
				(variable) i__computation_0_0

	Scope name: flight
		Scope level: 0
			Instance: 0
				(variable) mode__flight_0_0

	Scope name: getMode
		Scope level: 0
			Instance: 0
				(variable) communicationInput__getMode_0_0
				(variable) mask__getMode_0_0

	Scope name: global
		Scope level: 0
			Instance: 0
				(input) radioInput__global_0_0
				(input) spiInput__global_0_0
				(output) servoOutputs__global_0_0
				(shared) terminate__global_0_0
				(shared) isSafe__global_0_0
				(variable) decision__global_0_0
				(variable) _1Hz__global_0_0
				(variable) _20Hz__global_0_0
				(variable) MAX_DOWN_TIME__global_0_0
				(variable) INVALID__global_0_0
				(variable) VALID__global_0_0
				(variable) MANUAL__global_0_0
				(variable) AUTOMATIC__global_0_0
				(typedef) FILE__global_0_0
				(variable) EOF__global_0_0
				(shared) inputFile__global_0_0
				(shared) outputFile__global_0_0
				(shared) radioDownTime__global_0_0
				(shared) spiDownTime__global_0_0
				(function) getMode
				(function) autopilot
				(function) computation
				(thread) flight__thread
				(thread) servo__thread
				(thread) servo0__thread
				(thread) servo1__thread
				(thread) servo2__thread
				(thread) servo3__thread
				(thread) timer__thread
				(thread) failsafe__thread

	Scope name: main
		Scope level: 0
			Instance: 0
				(variable) argc__main_0_0
				(variable) argv__main_0_0
				(variable) startTime__main_0_0
				(variable) endTime__main_0_0
				(variable) seconds__main_0_0
				(variable) microseconds__main_0_0

	Scope name: timer
		Scope level: 0

		Scope level: 1

		Scope level: 2
			Instance: 0
				(variable) newLine__timer_2_0


Declared shared symbols:
------------------------
	Scope name: global
		(Shared_terminate__global_0_0) terminate__global_0_0
		(Shared_isSafe__global_0_0) isSafe__global_0_0
		(Shared_inputFile__global_0_0) inputFile__global_0_0
		(Shared_outputFile__global_0_0) outputFile__global_0_0
		(Shared_radioDownTime__global_0_0) radioDownTime__global_0_0
		(Shared_spiDownTime__global_0_0) spiDownTime__global_0_0


Use/Def of symbols:
-------------------
	Scope name: autopilot
		use:
			(function) computation
			(variable) mode__autopilot_0_0
			(variable) communicationInput__autopilot_0_0

	Scope name: computation
		def:
			(variable) result__computation_0_0
			(variable) i__computation_0_0

		use:
			(variable) result__computation_0_0
			(variable) i__computation_0_0

	Scope name: failsafe
		def:
			(shared) isSafe__global_0_0
			(shared) radioDownTime__global_0_0
			(shared) spiDownTime__global_0_0

		use:
			(input) radioInput__global_0_0
			(input) spiInput__global_0_0
			(shared) terminate__global_0_0
			(shared) isSafe__global_0_0
			(variable) MAX_DOWN_TIME__global_0_0
			(variable) INVALID__global_0_0
			(shared) outputFile__global_0_0
			(shared) radioDownTime__global_0_0
			(shared) spiDownTime__global_0_0
			(function) computation

	Scope name: flight
		def:
			(variable) decision__global_0_0
			(variable) mode__flight_0_0

		use:
			(input) radioInput__global_0_0
			(shared) terminate__global_0_0
			(variable) VALID__global_0_0
			(function) getMode
			(function) autopilot
			(variable) mode__flight_0_0

	Scope name: getMode
		use:
			(variable) MANUAL__global_0_0
			(variable) AUTOMATIC__global_0_0
			(variable) communicationInput__getMode_0_0
			(variable) mask__getMode_0_0

	Scope name: main
		def:
			(output) servoOutputs__global_0_0
			(shared) inputFile__global_0_0
			(shared) outputFile__global_0_0
			(shared) radioDownTime__global_0_0
			(shared) spiDownTime__global_0_0
			(variable) microseconds__main_0_0

		use:
			(shared) terminate__global_0_0
			(shared) isSafe__global_0_0
			(thread) flight__thread
			(thread) servo__thread
			(thread) timer__thread
			(thread) failsafe__thread
			(variable) startTime__main_0_0
			(variable) endTime__main_0_0
			(variable) seconds__main_0_0
			(variable) microseconds__main_0_0

	Scope name: servo
		use:
			(shared) terminate__global_0_0
			(function) computation
			(thread) servo0__thread
			(thread) servo1__thread
			(thread) servo2__thread
			(thread) servo3__thread

	Scope name: servo0
		def:
			(output) servoOutputs__global_0_0

		use:
			(function) computation

	Scope name: servo1
		def:
			(output) servoOutputs__global_0_0

		use:
			(function) computation

	Scope name: servo2
		def:
			(output) servoOutputs__global_0_0

		use:
			(function) computation

	Scope name: servo3
		def:
			(output) servoOutputs__global_0_0

		use:
			(function) computation

	Scope name: timer
		def:
			(input) radioInput__global_0_0
			(input) spiInput__global_0_0
			(shared) terminate__global_0_0
			(variable) _1Hz__global_0_0
			(variable) _20Hz__global_0_0
			(variable) newLine__timer_2_0

		use:
			(input) radioInput__global_0_0
			(input) spiInput__global_0_0
			(shared) terminate__global_0_0
			(variable) _1Hz__global_0_0
			(variable) _20Hz__global_0_0
			(variable) EOF__global_0_0
			(shared) inputFile__global_0_0
			(function) computation
			(variable) newLine__timer_2_0


Indirect use/def of symbols by parId:
-------------------------------------
	par0:
		terminate__global_0_0
			def (root): timer 
			use (root): failsafe flight servo timer 

		isSafe__global_0_0
			def (root): failsafe 
			use (root): failsafe 

		decision__global_0_0
			def (skip): flight 

		_1Hz__global_0_0
			def (skip): timer 
			use (skip): timer 

		_20Hz__global_0_0
			def (skip): timer 
			use (skip): timer 

		MAX_DOWN_TIME__global_0_0
			use (skip): failsafe 

		INVALID__global_0_0
			use (skip): failsafe 

		VALID__global_0_0
			use (skip): flight 

		EOF__global_0_0
			use (skip): timer 

		inputFile__global_0_0
			use (root): timer 

		outputFile__global_0_0
			use (root): failsafe 

		radioDownTime__global_0_0
			def (root): failsafe 
			use (root): failsafe 

		spiDownTime__global_0_0
			def (root): failsafe 
			use (root): failsafe 

		mode__flight_0_0
			def (skip): flight 
			use (skip): flight 

		newLine__timer_2_0
			def (skip): timer 
			use (skip): timer 

	par1:

Indirect use/def of symbols by threadId:
----------------------------------------
	failsafe:
		terminate__global_0_0
			use (intermediate): failsafe 

		isSafe__global_0_0
			def (intermediate): failsafe 
			use (intermediate): failsafe 

		MAX_DOWN_TIME__global_0_0
			use (skip): failsafe 

		INVALID__global_0_0
			use (skip): failsafe 

		outputFile__global_0_0
			use (intermediate): failsafe 

		radioDownTime__global_0_0
			def (intermediate): failsafe 
			use (intermediate): failsafe 

		spiDownTime__global_0_0
			def (intermediate): failsafe 
			use (intermediate): failsafe 

	flight:
		terminate__global_0_0
			use (intermediate): flight 

		decision__global_0_0
			def (skip): flight 

		VALID__global_0_0
			use (skip): flight 

		mode__flight_0_0
			def (skip): flight 
			use (skip): flight 

	main:
		terminate__global_0_0
			def (root): main 
			use (root): main 

		isSafe__global_0_0
			def (root): main 
			use (root): main 

		decision__global_0_0
			def (skip): main 

		_1Hz__global_0_0
			def (skip): main 
			use (skip): main 

		_20Hz__global_0_0
			def (skip): main 
			use (skip): main 

		MAX_DOWN_TIME__global_0_0
			use (skip): main 

		INVALID__global_0_0
			use (skip): main 

		VALID__global_0_0
			use (skip): main 

		EOF__global_0_0
			use (skip): main 

		inputFile__global_0_0
			use (root): main 

		outputFile__global_0_0
			use (root): main 

		radioDownTime__global_0_0
			def (root): main 
			use (root): main 

		spiDownTime__global_0_0
			def (root): main 
			use (root): main 

		mode__flight_0_0
			def (skip): main 
			use (skip): main 

		newLine__timer_2_0
			def (skip): main 
			use (skip): main 

	servo:
		terminate__global_0_0
			use (intermediate): servo 

	timer:
		terminate__global_0_0
			def (intermediate): timer 
			use (intermediate): timer 

		_1Hz__global_0_0
			def (skip): timer 
			use (skip): timer 

		_20Hz__global_0_0
			def (skip): timer 
			use (skip): timer 

		EOF__global_0_0
			use (skip): timer 

		inputFile__global_0_0
			use (intermediate): timer 

		newLine__timer_2_0
			def (skip): timer 
			use (skip): timer 


Functions used for combining shared variables:
----------------------------------------------

============================
tools::Threading::toString()
============================
Threads declared:
-----------------
	* failsafe__thread
	* flight__thread
	* main__thread
	* servo__thread
	* servo0__thread
	* servo1__thread
	* servo2__thread
	* servo3__thread
	* timer__thread

Threads unused:
---------------

par(...) statements:
--------------------
	Thread scope: main
		par0:
		* servo__thread
		* timer__thread
		* flight__thread
		* failsafe__thread

	Thread scope: servo
		par1:
		* servo0__thread
		* servo1__thread
		* servo2__thread
		* servo3__thread

========================
tools::Abort::toString()
========================
Abort statements:
-----------------
	Thread scope: main__thread
		par0:
		* abortWeakImmediate0 weakImmediate

	Thread scope: servo__thread
		par1:
		* abortStrongImmediate2 strongImmediate


============================
tools::Condition::toString()
============================
Iterations statements:
----------------------
	Thread scope: main__thread
		par0:
		* while_0

	Thread scope: servo__thread
		par1:
		* while_2


========================
tarot::Tarot::toString()
========================
Full tarot:
-----------
	core0: main__thread
	.	core0: while_0
	.	.	core0: abortWeakImmediate0
	.	.	:	core0: par0
	.	.	:	|	core0: servo__thread
	.	.	:	|	.	core0: abortStrongImmediate2
	.	.	:	|	.	:	core0: while_2
	.	.	:	|	.	:	.	core0: par1
	.	.	:	|	.	:	.	|	core0: servo0__thread
	.	.	:	|	.	:	.	|	core0: servo1__thread
	.	.	:	|	.	:	.	|	core0: servo2__thread
	.	.	:	|	.	:	.	|	core0: servo3__thread
	.	.	:	|	.	:	.	pause2
	.	.	:	|	core0: timer__thread
	.	.	:	|	.	core0: abortStrongImmediate3
	.	.	:	|	.	:	core0: while_4
	.	.	:	|	.	:	.	pause3
	.	.	:	|	core0: flight__thread
	.	.	:	|	.	core0: abortStrongImmediate1
	.	.	:	|	.	:	core0: while_1
	.	.	:	|	.	:	.	pause1
	.	.	:	|	core0: failsafe__thread
	.	.	:	|	.	core0: abortStrongImmediate4
	.	.	:	|	.	:	core0: while_5
	.	.	:	|	.	:	.	pause4
	.	.	pause0


Tarot by coreId:
----------------
	core0:
	-------
		core0: main__thread
		.	core0: while_0
		.	.	core0: abortWeakImmediate0
		.	.	:	core0: par0
		.	.	:	|	core0: servo__thread
		.	.	:	|	.	core0: abortStrongImmediate2
		.	.	:	|	.	:	core0: while_2
		.	.	:	|	.	:	.	core0: par1
		.	.	:	|	.	:	.	|	core0: servo0__thread
		.	.	:	|	.	:	.	|	core0: servo1__thread
		.	.	:	|	.	:	.	|	core0: servo2__thread
		.	.	:	|	.	:	.	|	core0: servo3__thread
		.	.	:	|	.	:	.	pause2
		.	.	:	|	core0: timer__thread
		.	.	:	|	.	core0: abortStrongImmediate3
		.	.	:	|	.	:	core0: while_4
		.	.	:	|	.	:	.	pause3
		.	.	:	|	core0: flight__thread
		.	.	:	|	.	core0: abortStrongImmediate1
		.	.	:	|	.	:	core0: while_1
		.	.	:	|	.	:	.	pause1
		.	.	:	|	core0: failsafe__thread
		.	.	:	|	.	core0: abortStrongImmediate4
		.	.	:	|	.	:	core0: while_5
		.	.	:	|	.	:	.	pause4
		.	.	pause0


par(...) statements with core allocation:
-----------------------------------------
	Thread main__thread:
		all:
		* core0

		par0:
		* core0

	Thread servo__thread:
		all:
		* core0

		par1:
		* core0


par(...) statements with active cores:
--------------------------------------
	Thread main__thread:
		all:
		* core0

		par0:
		* core0

	Thread servo__thread:
		all:
		* core0

		par1:
		* core0


Reaction starts:
----------------
	core0:
		main: Master
		servo: Master


Reaction ends:
--------------
	core0:
		par0:
			coreIds:
			* 0

			isMaster:
			* true

			threadScope:
			* main

		par1:
			coreIds:
			* 0

			isMaster:
			* true

			threadScope:
			* servo


Par(...) handlers:
------------------
	par0:
	* failsafe__thread
	* flight__thread
	* servo__thread
	* timer__thread
	* mainReactionStartMaster0
	* mainReactionEndMaster0
	* servoParHandlerMaster0
	* abortWeakImmediate0Check0

	par1:
	* servo0__thread
	* servo1__thread
	* servo2__thread
	* servo3__thread
	* servoReactionStartMaster0
	* servoReactionEndMaster0
	* abortStrongImmediate2Check0


Abort checks:
-------------
	core0:
		main:
			weak:
			* abortWeakImmediate0(!isSafe__global_0_0.value)

		servo:
			strong:
			* abortStrongImmediate2(terminate__global_0_0.value)


Linked lists:
-------------
	core0:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartMaster0
			* (thread) servo__thread
			* (parHandler) servoParHandlerMaster0
			* (thread) timer__thread
			* (thread) flight__thread
			* (thread) failsafe__thread
			* (abortWeak) abortWeakImmediate0Check0
			* (parEnd) mainReactionEndMaster0

		Thread servo__thread linked lists:
			par1:
			* (parStart) servoReactionStartMaster0
			* (abortStrong) abortStrongImmediate2Check0
			* (thread) servo0__thread
			* (thread) servo1__thread
			* (thread) servo2__thread
			* (thread) servo3__thread
			* (parEnd) servoReactionEndMaster0


par(...) handlers in thread scopes:
-----------------------------------
	par0	main__thread
	par1	servo__thread

Last par(...)s in each thread's reaction:
-----------------------------------------
	core0:
		Thread scope: servo
		* par1


Last par(...)s in each abort:
-------------------------------
	core0:
		Thread scope: main
		* abortWeakImmediate0->par0

		Thread scope: servo
		* abortStrongImmediate2->par1


Last par(...)s in each iteration:
---------------------------------
	core0:
		Thread scope: servo
		* while_2->par1


Last par(...) in each thread:
------------------------------
	core0:
		Thread scope: servo
		* par1


Scoped aborts:
--------------
	abortStrongImmediate2:
		coreIds:
		* 0

		parIds:
		* par1

	abortWeakImmediate0:
		coreIds:
		* 0

		parIds:
		* par0


Scoped iterations:
------------------
	while_0:
		coreIds:
		* 0

		parIds:
		* par0
		* par1


Aborts around par(...):
-----------------------
	par0:
	* abortWeakImmediate0 (par0)

	par1:
	* abortWeakImmediate0 (par0)
	* abortStrongImmediate2 (par1)


============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	x86

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		failsafe__thread
	0		flight__thread
	0		main__thread
	0		servo__thread
	0		servo0__thread
	0		servo1__thread
	0		servo2__thread
	0		servo3__thread
	0		timer__thread

Priority of cores for each par(...) in threads:
-----------------------------------------------
	servo:
	* core0(0)



========================
tools::Mutex::toString()
========================
Mutex information:
------------------
	Thread servo:
		baseMask  :10000000000000000000000000000000
		coreCount :1
		offset    :31


