/* Generated by EEC */
#ifndef __lzss_config_H
#define __lzss_config_H

#include "lzss.h"

/* Macros for the reactive machine and its reset function */
#define INIT_MODULE()
#define RUN_MODULE() ( lzss_archiver(0) )
#define RESET_MODULE() ( lzss_archiver_reset() )

union SetFuncs {
    void (*set)(string);
};

struct signal_binding {
    char name[64];
    unsigned char status;
    union SetFuncs u;
};

struct signal_binding input_signal[] = {
    {"fileName", 0, {lzss_archiver_I_fileName}}
};
#define NUM_OF_INPUT_SIGNALS (sizeof(input_signal)/sizeof(struct signal_binding))

struct signal_binding output_signal[] = {
    {"done", 0, {0}},
    {"error", 0, {0}}
};
#define NUM_OF_OUTPUT_SIGNALS (sizeof(output_signal)/sizeof(struct signal_binding))

void lzss_archiver_O_done(void)
{
    output_signal[0].status = 1;
}

void lzss_archiver_O_error(void)
{
    output_signal[1].status = 1;
}

#ifdef TESTBENCH

#endif

#endif
