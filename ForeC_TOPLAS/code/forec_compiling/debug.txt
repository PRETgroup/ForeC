ForeC Compiler (multicore distribution)
Version: 0.99 (5 October 2014)
Debug output
---------------------------------------

Source file name: example.forec
Header file name: example.foreh

============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	microblaze

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	0		tA__thread
	1		tB__thread
	0		tC__thread
	1		tD__thread


==============================
tools::SymbolTable::toString()
==============================
Symbol tables:
--------------
	Scope name: global
		Scope level: 0
			Instance: 0
				(shared) x__global_0_0

	Scope name: main
		Scope level: 0
			Instance: 0
				(variable) argc__main_0_0
				(variable) argv__main_0_0

	Scope name: plus
		Scope level: 0
			Instance: 0
				(variable) th1__plus_0_0
				(variable) th2__plus_0_0
				(variable) pre__plus_0_0

	Scope name: tC
		Scope level: 0
			Instance: 0
				(variable) a__tC_0_0


Declared shared symbols:
------------------------
	Scope name: global
		(Shared_x__global_0_0) x__global_0_0


Use/Def of symbols:
-------------------
	Scope name: main
		def:
			(shared) x__global_0_0

		use:
			(shared) x__global_0_0

	Scope name: plus
		use:
			(variable) th1__plus_0_0
			(variable) th2__plus_0_0

	Scope name: tA
		def:
			(shared) x__global_0_0

		use:
			(shared) x__global_0_0


Indirect use/def of symbols by parId:
-------------------------------------
	par0:
		x__global_0_0
			def (root): tA 
			use (root): tA 

	par1:

Indirect use/def of symbols by threadId:
----------------------------------------
	main:
		x__global_0_0
			def (root): main 
			use (root): main 

	tA:
		x__global_0_0
			def (intermediate): tA 
			use (intermediate): tA 


Functions used for combining shared variables:
----------------------------------------------
	plus

============================
tools::Threading::toString()
============================
Threads declared:
-----------------
	* main__thread
	* tA__thread
	* tB__thread
	* tC__thread
	* tD__thread

Threads unused:
---------------

par(...) statements:
--------------------
	Thread scope: main
		par0:
		* tA__thread
		* tB__thread

	Thread scope: tB
		par1:
		* tC__thread
		* tD__thread

========================
tools::Abort::toString()
========================
Abort statements:
-----------------
	Thread scope: main__thread
		par0:
		* abortStrong0 strong


============================
tools::Condition::toString()
============================

========================
tarot::Tarot::toString()
========================
Full tarot:
-----------
	core0: main__thread
	.	core0: abortStrong0
	.	:	pause0
	.	:	core0: par0
	.	:	|	core0: tA__thread
	.	:	|	.	pause1
	.	:	|	core1: tB__thread
	.	:	|	.	core1: par1
	.	:	|	.	|	core0: tC__thread
	.	:	|	.	|	core1: tD__thread


Tarot by coreId:
----------------
	core0:
	-------
		core0: main__thread
		.	core0: abortStrong0
		.	:	pause0
		.	:	core0: par0
		.	:	|	core0: tA__thread
		.	:	|	.	pause1
		.	:	|	core1: tB__thread
		.	:	|	.	core1: par1
		.	:	|	.	|	core0: tC__thread

	core1:
	-------
		core0: main__thread
		.	core0: abortStrong0
		.	:	pause0
		.	:	core0: par0
		.	:	|	core1: tB__thread
		.	:	|	.	core1: par1
		.	:	|	.	|	core1: tD__thread


par(...) statements with core allocation:
-----------------------------------------
	Thread main__thread:
		all:
		* core0
		* core1

		par0:
		* core0
		* core1

	Thread tB__thread:
		all:
		* core0
		* core1

		par1:
		* core0
		* core1


par(...) statements with active cores:
--------------------------------------
	Thread main__thread:
		all:
		* core0
		* core1

		par0:
		* core0
		* core1

	Thread tB__thread:
		all:
		* core0
		* core1

		par1:
		* core0
		* core1


Reaction starts:
----------------
	core0:
		main: Master
		tB: Slave

	core1:
		main: Slave
		tB: Master


Reaction ends:
--------------
	core0:
		par0:
			coreIds:
			* 0
			* 1

			isMaster:
			* true

			threadScope:
			* main

		par1:
			threadScope:
			* tB

	core1:
		par0:
			threadScope:
			* main

		par1:
			coreIds:
			* 0
			* 1

			isMaster:
			* true

			threadScope:
			* tB


Par(...) handlers:
------------------
	par0:
	* tA__thread
	* tB__thread
	* mainReactionStartMaster0
	* mainReactionStartSlave1
	* mainReactionEndMaster0
	* mainReactionEndSlave1
	* tBParHandlerMaster1
	* tBParHandlerSlave0
	* abortStrong0Check0
	* abortStrong0Check1

	par1:
	* tC__thread
	* tD__thread
	* tBReactionStartMaster1
	* tBReactionStartSlave0
	* tBReactionEndMaster1
	* tBReactionEndSlave0


Abort checks:
-------------
	core0:
		main:
			strong:
			* abortStrong0(x__global_0_0.value > 1)

	core1:
		main:
			strong:
			* abortStrong0(x__global_0_0.value > 1)


Linked lists:
-------------
	core0:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartMaster0
			* (abortStrong) abortStrong0Check0
			* (thread) tA__thread
			* (parHandler) tBParHandlerSlave0
			* (parEnd) mainReactionEndMaster0

		Thread tB__thread linked lists:
			par1:
			* (parStart) tBReactionStartSlave0
			* (thread) tC__thread
			* (parEnd) tBReactionEndSlave0

	core1:
		Thread main__thread linked lists:
			par0:
			* (parStart) mainReactionStartSlave1
			* (abortStrong) abortStrong0Check1
			* (thread) tB__thread
			* (parHandler) tBParHandlerMaster1
			* (parEnd) mainReactionEndSlave1

		Thread tB__thread linked lists:
			par1:
			* (parStart) tBReactionStartMaster1
			* (thread) tD__thread
			* (parEnd) tBReactionEndMaster1


par(...) handlers in thread scopes:
-----------------------------------
	par0	main__thread
	par1	tB__thread

Last par(...)s in each thread's reaction:
-----------------------------------------
	core0:
		Thread scope: tB
		* par1

	core1:
		Thread scope: tB
		* par1


Last par(...)s in each abort:
-------------------------------
	core0:
		Thread scope: main
		* abortStrong0->par0

	core1:
		Thread scope: main
		* abortStrong0->par0


Last par(...) in each thread:
------------------------------
	core0:
		Thread scope: tB
		* par1

	core1:
		Thread scope: tB
		* par1


Scoped aborts:
--------------
	abortStrong0:
		coreIds:
		* 0
		* 1

		parIds:
		* par0


Aborts around par(...):
-----------------------
	par0:
	* abortStrong0 (par0)

	par1:
	* abortStrong0 (par0)


============================
tools::Multicore::toString()
============================
Multicore architecture:
-----------------------
	microblaze

Multicore allocations:
----------------------
	Core	Thread
	----	------
	0		main__thread
	0		tA__thread
	1		tB__thread
	0		tC__thread
	1		tD__thread

Priority of cores for each par(...) in threads:
-----------------------------------------------
	tB:
	* core0(1)
	* core1(0)



========================
tools::Mutex::toString()
========================
Mutex information:
------------------
	Thread tB:
		baseMask  :10000000000000000000000000000000
		coreCount :2
		offset    :31


